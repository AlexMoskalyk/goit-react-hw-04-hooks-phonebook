{"version":3,"sources":["Components/main/Main.module.css","Components/contactList/ContacatList.module.css","Components/form/Form.module.css","Components/filter/Filter.module.css","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/form/Form.js","Components/main/Main.js","services/localStorage.js","App.js","index.js"],"names":["module","exports","ContactList","filtredContacts","deleteContact","className","styles","ul","map","item","li","contactName","contactNumber","type","id","onClick","Filter","setFilterInState","filter","label","onChange","value","pattern","title","required","initialState","Form","isThereContact","addContact","useState","form","setForm","onHandleChange","e","target","name","prev","container","onSubmit","preventDefault","console","log","alert","formBtn","initialContacts","Main","contacts","setContacts","setFilter","useEffect","newContacts","key","reformedState","localStorage","getItem","undefined","JSON","parse","error","message","load","stringify","setItem","save","addContacts","newContact","prevContacts","uuidv4","some","contact","toLowerCase","includes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df0b7957.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__2dlTh\",\"title\":\"Main_title__GlUgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContacatList_li__2EqS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__1Ip7C\",\"formBtn\":\"Form_formBtn__2620C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1KM6P\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContacatList.module.css\";\n\nconst ContactList = ({ filtredContacts, deleteContact }) => {\n  return (\n    <ul className={styles.ul}>\n      {filtredContacts().map((item) => (\n        <li className={styles.li} key={item.id}>\n          <span>{item.contactName}</span>\n          <span>{item.contactNumber}</span>\n          <button type=\"button\" id={item.id} onClick={deleteContact}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filtredContacts: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ setFilterInState, filter }) => {\n  return (\n    <label className={styles.label}>\n      Search\n      <input\n        onChange={setFilterInState}\n        value={filter}\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  setFilterInState: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import React, { useState } from \"react\";\nimport styles from \"./Form.module.css\";\n\nconst initialState = {\n  contactName: \"\",\n  contactNumber: \"\",\n};\n\nconst Form = ({ isThereContact, addContact }) => {\n  const [form, setForm] = useState(initialState);\n  // const [contactName, setContactName] = useState('');\n  // const [contactNumber, setContactNumber] = useState('');\n\n  const onHandleChange = (e) => {\n    const { value, name } = e.target;\n\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const reset = () => {\n    setForm(initialState);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(form.contactName);\n\n    if (isThereContact(form.contactName)) {\n      return alert(`${form.contactName} has been already in contact list`);\n    }\n    addContact(form);\n    reset();\n  };\n\n  return (\n    <>\n      <form className={styles.container} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            value={form.contactName}\n            onChange={onHandleChange}\n            type=\"text\"\n            name=\"contactName\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Telefon\n          <input\n            value={form.contactNumber}\n            onChange={onHandleChange}\n            type=\"tel\"\n            name=\"contactNumber\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n\n//\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./Main.module.css\";\nimport Form from \"../form/Form\";\nimport { load, save } from \"../../services/localStorage\";\n\nconst initialContacts = [\n  { id: \"id-1\", contactName: \"Rosie Simpson\", contactNumber: \"459-12-56\" },\n  { id: \"id-2\", contactName: \"Hermione Kline\", contactNumber: \"443-89-12\" },\n  { id: \"id-3\", contactName: \"Eden Clements\", contactNumber: \"645-17-79\" },\n  { id: \"id-4\", contactName: \"Annie Copeland\", contactNumber: \"227-91-26\" },\n];\n\nconst Main = () => {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const newContacts = load(\"contacts\");\n    if (newContacts) {\n      setContacts(newContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    save(\"contacts\", contacts);\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    setContacts((prevContacts) => [\n      ...prevContacts,\n      { id: uuidv4(), ...newContact },\n    ]);\n  };\n\n  const isThereContact = (contactName) =>\n    contacts.some(\n      (contact) =>\n        contact.contactName.toLowerCase() === contactName.toLowerCase()\n    );\n\n  const setFilterInState = (e) => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  const filtredContacts = () =>\n    contacts.filter((contact) =>\n      contact.contactName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const deleteContact = (e) => {\n    const id = e.target.id;\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== id)\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.addContacts}>\n          <h2>Add contact</h2>\n          <Form addContact={addContact} isThereContact={isThereContact} />\n        </div>\n        <h2 className={styles.title}>Find contact</h2>\n\n        <Filter setFilterInState={setFilterInState} filter={filter} />\n        <h2>Contact list</h2>\n        <ContactList\n          filtredContacts={filtredContacts}\n          deleteContact={deleteContact}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","export const save = (key, value) => {\n  try {\n    const reformedState = JSON.stringify(value);\n    localStorage.setItem(key, reformedState);\n  } catch (error) {\n    console.log(\"Set state error: \", error.message);\n  }\n};\n\nexport const load = (key) => {\n  try {\n    const reformedState = localStorage.getItem(key);\n    return reformedState === null ? undefined : JSON.parse(reformedState);\n  } catch (error) {\n    console.log(\"Get state error: \", error.message);\n  }\n};\n","import React from \"react\";\nimport Main from \"./Components/main/Main\";\n\nconst App = () => {\n  return <Main />;\n};\n\nexport default App;\n\n// import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import ContactList from \"./contactList/ContactList\";\n// import Filter from \"./filter/Filter\";\n// import Form from \"./form/Form\";\n// import Section from \"./section/Section\";\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", contactName: \"Rosie Simpson\", contactNumber: \"459-12-56\" },\n//       { id: \"id-2\", contactName: \"Hermione Kline\", contactNumber: \"443-89-12\" },\n//       { id: \"id-3\", contactName: \"Eden Clements\", contactNumber: \"645-17-79\" },\n//       { id: \"id-4\", contactName: \"Annie Copeland\", contactNumber: \"227-91-26\" },\n//     ],\n\n//     filter: \"\",\n//   };\n\n//   addContact = (newContact) => {\n//     this.setState((prevState) => ({\n//       contacts: [\n//         ...prevState.contacts,\n//         {\n//           id: uuidv4(),\n//           ...newContact,\n//         },\n//       ],\n//       contactName: \"\",\n//       contactNumber: \"\",\n//     }));\n//   };\n\n//   setFilterInState = (e) => {\n//     const { value } = e.target;\n//     this.setState({ filter: value });\n//   };\n\n//   filtredContacts = () =>\n//     this.state.contacts.filter((contact) =>\n//       contact.contactName\n//         .toLowerCase()\n//         .includes(this.state.filter.toLowerCase())\n//     );\n\n//   render() {\n//     return (\n//       <>\n//         <Section title=\"Add contact\">\n//           <Form addContact={this.addContact} />\n//         </Section>\n//         <Section title=\"Find contact\">\n//           <Filter\n//             setFilterInState={this.setFilterInState}\n//             filter={this.state.filter}\n//           />\n//         </Section>\n//         <Section title=\"Contact list\">\n//           <ContactList filtredContacts={this.filtredContacts} />\n//         </Section>\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}